
RUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    rm get-pip.py
RUN  apt install -y python3
RUN apt-get update && DEBIAN_FRONTEND=noninteractive  apt-get install -y git wget vim make g++ \
libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev \
 protobuf-compiler libgflags-dev libgoogle-glog-dev liblmdb-dev libboost-all-dev
RUN mkdir /usr/lib/nvidia
RUN DEBIAN_FRONTEND=noninteractive  apt-get install -y  libopenblas-dev
RUN apt-get install -y  python-numpy
RUN export LPATH=$LPATH:/usr/lib/nvidia-current:/opt/bin:/opt/lib64:/opt/lib
RUN export LIBRARY_PATH=$LIBRARY_PATH:/usr/lib/nvidia-current:/opt/lib64:/opt/lib
RUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/nvidia-current:/opt/lib64:/opt/lib
RUN export PATH=$PATH:/opt/bin:/opt/lib64:/opt/lib
RUN export CUDNN_PATH="/usr/lib/x86_64-linux-gnu/libcudnn.so.6"
LABEL com.nvidia.volumes.neeapded="nvidia_driver"
LABEL com.nvidia.cuda.version="${CUDA_VERSION}"

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda-8.0/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64
ENV LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64:$LD_LIBRARY_PATH
# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_REQUIRE_CUDA "cuda>=8.0"

RUN DEBIAN_FRONTEND=noninteractive apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python-pip
RUN DEBIAN_FRONTEND=noninteractive python -m pip install --upgrade pip
RUN DEBIAN_FRONTEND=noninteractive pip install scipy
RUN DEBIAN_FRONTEND=noninteractive pip install scikit-image
RUN DEBIAN_FRONTEND=noninteractive pip install protobuf
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y pciutils
RUN DEBIAN_FRONTEND=noninteractive apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get -y install python3-pip
RUN DEBIAN_FRONTEND=noninteractive pip3 install scipy
RUN DEBIAN_FRONTEND=noninteractive pip3 install scikit-image
RUN DEBIAN_FRONTEND=noninteractive pip3 install protobuf
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y pciutils
RUN DEBIAN_FRONTEND=noninteractive apt-get update
RUN DEBIAN_FRONTEND=noninteractive pip install http://download.pytorch.org/whl/cu80/torch-0.2.0.post3-cp27-cp27mu-manylinux1_x86_64.whl
RUN DEBIAN_FRONTEND=noninteractive pip install torchvision
RUN DEBIAN_FRONTEND=noninteractive pip3 install http://download.pytorch.org/whl/cu80/torch-0.2.0.post3-cp35-cp35m-manylinux1_x86_64.whl
RUN DEBIAN_FRONTEND=noninteractive pip3 install torchvision
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y cuda-core-8-0
RUN DEBIAN_FRONTEND=noninteractive pip install -U numpy
RUN DEBIAN_FRONTEND=noninteractive pip install opencv-python
RUN DEBIAN_FRONTEND=noninteractive pip install cffi
RUN DEBIAN_FRONTEND=noninteractive pip install pypng
RUN DEBIAN_FRONTEND=noninteractive pip3 install -U numpy
RUN DEBIAN_FRONTEND=noninteractive pip3 install opencv-python
RUN DEBIAN_FRONTEND=noninteractive pip3 install cffi
RUN DEBIAN_FRONTEND=noninteractive pip3 install pypng
#RUN DEBIAN_FRONTEND=noninteractive apt-get install python-tk need for work, must install into docker 
RUN DEBIAN_FRONTEND=noninteractive pip3 install tensorflow-gpu==1.4.0
RUN DEBIAN_FRONTEND=noninteractive pip3 install pillow
RUN DEBIAN_FRONTEND=noninteractive pip3 install matplotlib
RUN DEBIAN_FRONTEND=noninteractive pip3 install Cython
RUN DEBIAN_FRONTEND=noninteractive mkdir ~/temp
RUN DEBIAN_FRONTEND=noninteractive cd ~/temp
RUN DEBIAN_FRONTEND=noninteractive wget https://cmake.org/files/v3.12/cmake-3.12.2.tar.gz
RUN DEBIAN_FRONTEND=noninteractive tar -xzvf cmake-3.12.2.tar.gz
RUN DEBIAN_FRONTEND=noninteractive cd cmake-3.12.2/ && ./bootstrap && make -j4 && make install
RUN DEBIAN_FRONTEND=noninteractive rm -rf cmake-3.12.2.tar.gz
RUN echo "alias python=python3" >> /root/.bashrc
RUN DEBIAN_FRONTEND=noninteractive pip install tensorflow-gpu==1.4.0
RUN DEBIAN_FRONTEND=noninteractive apt-get install libeigen3-dev
RUN DEBIAN_FRONTEND=noninteractive pip3 install h5py
RUN export PYTHONPATH=/demon/lmbspecialops/python
RUN DEBIAN_FRONTEND=noninteractive pip3 install xarray
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y cmake-curses-gui

